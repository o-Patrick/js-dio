Obs: iteração == repetição;

- Atribuição de valores{

	-------------------------------------------------
	Case Type							|	Example
	-------------------------------------------------
	Original Variableas String		|	some awesome var
	Camel Case							|	someAwesomeVar
	Snake Case							|	some_awesome_var
	Kebab Case							|	some-awesome-var
	Pascal Case							|	SomeAwesomeVar
	Snake Upper Case					|	SOME_AWESOME_VAR
	-------------------------------------------------

	Obs: priorizar camelCase; para constantes, a convensão é utilizar MAIÚSCULAS;
};

- var e let{
	- Hoisting: atribuir valor a uma variável antes de declará-la{
		num = 1;
		console.log(num);
		var num;
			// NÃO FUNCIONA:
		num = 1;
		console.log(num);
		let num;
			// No caso de var, o JS o "coloca para cima", diferente de let que precisaria ser posta antes (o que simplesmente dá erro mesmo);
	};

	- let não pode ser redeclarada, apenas atribuída;

	- A recomendação é não utilizar tantas variáveis globais;
};

- const{
	- Declarada em SNAKE_UPPER_CASE;
	- Escopo de bloco;
	- Não faz hoisting;
};

- Estruturas de dados{
	- JS é uma linguagem de tipagem dinâmica (não precisa declarar o tipo da variável, além deste poder ser alterado);
};

- Strings{
	- Métodos importantes{
		- Concatenação;
		- Propriedade length;
		- Iterabilidade;
		- Formatação;
		- Index de letras;
	};
};

- Falsy values{
	- São tratados como falsos, mas não são iguais ao false booleano;
};